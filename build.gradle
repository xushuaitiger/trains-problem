//gradle build
buildscript {
    //定义扩展属性(可选)
    ext {
        springBootVersion = "2.1.0.RELEASE"
    }
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        //和maven中央仓库一样的另一个依赖管理仓库,主要是java
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'idea'
// 使用spring boot
apply plugin: 'org.springframework.boot'
// 使用spring boot的自动依赖管理
apply plugin: 'io.spring.dependency-management'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
    }
}



dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.springframework.boot:spring-boot-starter-web'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}


repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    //和maven中央仓库一样的另一个依赖管理仓库,主要是java
    jcenter()
}

test {
    // Print in console the result of test
    afterTest { test, result ->
        println "Executing test ${test.name} [${test.className}] with result: ${result.resultType}"
    }
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.tiger.Main'
        )
    }
}